# Generated by Django 3.2.6 on 2022-06-16 10:23

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alerte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_alerte', models.CharField(choices=[('Assurance', 'Assurance'), ('Visite technique', 'Visite technique'), ('Stationnement', 'Stationnement'), ('Patente', 'Patente'), ("Pièce d'identité", "Pièce d'identité"), ('Permis de conduire', 'Permis de conduire'), ('Carte accès portuaire', 'Carte accès portuaire'), ('Prochain entretien en kilométrage', 'Prochain entretien en kilométrage'), ('Prochain entretien en date', 'Prochain entretien en date')], default='Assurance', max_length=100, unique=True, verbose_name="type d'alerte")),
                ('delai', models.SmallIntegerField(blank=True, null=True, verbose_name='délai en jours')),
            ],
            options={
                'ordering': ('type_alerte',),
            },
        ),
        migrations.CreateModel(
            name='Chauffeur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('civilite', models.CharField(choices=[('M.', 'M.'), ('Mme', 'Mme'), ('Mlle', 'Mlle')], default='M.', max_length=20, verbose_name='civilité')),
                ('nom', models.CharField(max_length=100, verbose_name='nom')),
                ('prenoms', models.CharField(max_length=100, verbose_name='prénoms')),
                ('date_naissance', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date de naissance')),
                ('lieu_naissance', models.CharField(blank=True, default='', max_length=2250, verbose_name='lieu de naissance')),
                ('type_chauffeur', models.CharField(choices=[('Titulaire', 'Titulaire'), ('Supléant', 'Supléant')], default='Titulaire', max_length=20, verbose_name='type de chauffeurs')),
                ('statut', models.CharField(choices=[('Actif', 'Actif'), ('Sorti', 'sorti')], default='Actif', max_length=20, verbose_name='statut du chauffeur')),
                ('matricule', models.CharField(blank=True, default='', max_length=10, unique=True, verbose_name='matricule')),
                ('cellulaire', models.CharField(blank=True, default='', max_length=10, verbose_name='Cellulaire')),
                ('cellulaire2', models.CharField(blank=True, default='', max_length=10, verbose_name='Cellulaire 2')),
                ('email', models.CharField(blank=True, default='', max_length=200, verbose_name='E-mail')),
                ('type_contrat', models.CharField(choices=[('CDI', 'CDI'), ('CDD', 'CDD')], default='Actif', max_length=20, verbose_name='type de contrat')),
                ('date_entree', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date entrée')),
                ('date_sortie', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date sortie')),
                ('piece_identite', models.CharField(blank=True, default='', max_length=100, verbose_name='N° pièce identité')),
                ('nature_piece', models.CharField(choices=[('CNI', 'CNI'), ('ATTESTATION IDENTITE', 'ATTESTATION IDENTITE'), ('PASSPORT', 'PASSPORT'), ('CARTE CONULAIRE', 'CARTE CONULAIRE')], default='CNI', max_length=100, verbose_name='nature pièce')),
                ('piece_date_etablissement', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date établissement pièce')),
                ('piece_date_expiration', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='pièce expiration')),
                ('permis_numero', models.CharField(blank=True, default='', max_length=100, verbose_name='numéro de permis')),
                ('permis_categorie', models.CharField(choices=[('BCDE', 'BCDE'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='BCDE', max_length=5, verbose_name='catégorie de permis')),
                ('permis_date_etablissement', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name="date d'établissement")),
                ('permis_date_echeance', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name="date d'échéance")),
                ('numero_carte_acces', models.CharField(blank=True, default='', max_length=100, verbose_name='numéro carte accès')),
                ('carte_acces_echeance', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name="date d'échéance carte accès")),
                ('contact', models.CharField(blank=True, default='', max_length=100, verbose_name="personne à contacter en cas d'urgence")),
                ('photo_permis', models.ImageField(blank=True, null=True, upload_to='permis', verbose_name='photo permis de conduire')),
                ('photo_piece', models.ImageField(blank=True, null=True, upload_to='pieces', verbose_name='photo pièce identité')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='chauffeurs', verbose_name='photo du chauffeur')),
            ],
            options={
                'ordering': ('nom', 'prenoms'),
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raison_sociale', models.CharField(max_length=100, unique=True, verbose_name='raison sociale')),
                ('adresse', models.CharField(blank=True, default='', max_length=150, verbose_name='adresse')),
                ('boite_postale', models.CharField(blank=True, default='', max_length=100, verbose_name='boîte postale')),
                ('telephone', models.CharField(blank=True, default='', max_length=30, verbose_name='téléphone')),
                ('cellulaire', models.CharField(blank=True, default='', max_length=30, verbose_name='cellulaire')),
                ('compte_contribuable', models.CharField(blank=True, default='', max_length=50, verbose_name='compte contribuable')),
                ('registre_commerce', models.CharField(blank=True, default='', max_length=50, verbose_name='registre commerce')),
            ],
            options={
                'ordering': ('raison_sociale',),
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat_commande', models.CharField(choices=[('En cours', 'En cours'), ('Livrée', 'Livrée')], default='Gazoil', max_length=10, verbose_name='état commande')),
                ('numero_commande', models.CharField(blank=True, default='', max_length=20, verbose_name='n°bon cde')),
                ('date_bon_commande', models.DateField(blank=True, null=True, verbose_name='date bon cde')),
                ('client_pour_compte', models.CharField(blank=True, default='', max_length=100, verbose_name='pour le compte de')),
                ('date_commande', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date saisie')),
                ('lieu_chargement', models.CharField(blank=True, default='', max_length=150, verbose_name='lieu chargement')),
                ('lieu_dechargement', models.CharField(blank=True, default='', max_length=150, verbose_name='lieu déchargement')),
                ('navire', models.CharField(blank=True, default='', max_length=150, verbose_name='navire')),
                ('mode_tarification', models.CharField(choices=[('Tonnage', 'Tonnage'), ('Kilométrage', 'Kilométrage'), ('Trajet', 'Trajet'), ('Autre', 'Autre')], default='Tonnage', max_length=30, verbose_name='mode tarification')),
                ('tonnage_estime', models.FloatField(blank=True, default=0, verbose_name='tonnage estimé en T')),
                ('volume_estime', models.FloatField(blank=True, default=0, verbose_name='volume estimé en M3')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('numero_dossier', models.CharField(blank=True, default='', max_length=10, verbose_name='numéro dossier')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.client', verbose_name='client')),
            ],
            options={
                'ordering': ('-date_commande',),
            },
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Facturation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat_facture', models.CharField(choices=[('Emise', 'Emise'), ('Attente', 'Attente'), ('Soldée', 'Soldée')], default='Emise', max_length=30, verbose_name='état')),
                ('date_facture', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date facture')),
                ('delai', models.SmallIntegerField(blank=True, default=30, verbose_name='délai')),
                ('bon_livraison', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='bon de livraison')),
                ('tva', models.FloatField(blank=True, default=0, verbose_name='tva')),
                ('numero_facture', models.CharField(blank=True, default='', max_length=10, verbose_name='numero facture')),
                ('avance', models.FloatField(blank=True, default=0, verbose_name='avance perçue')),
                ('debours', models.FloatField(blank=True, default=0, verbose_name='debours')),
                ('montant_lettre', models.CharField(blank=True, default='', max_length=255, verbose_name='montant en lettre')),
                ('utiliser_montant_lettre', models.BooleanField(blank=True, default=False, verbose_name='utiliser le montant en lettre')),
                ('condition_vente', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='condition de vente')),
                ('commande', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='parametre.commande', verbose_name='client')),
            ],
        ),
        migrations.CreateModel(
            name='Fonction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=100, unique=True, verbose_name='fonction')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raison_sociale', models.CharField(max_length=100, unique=True, verbose_name='raison sociale')),
                ('adresse', models.CharField(blank=True, default='', max_length=150, verbose_name='adresse')),
                ('boite_postale', models.CharField(blank=True, default='', max_length=100, verbose_name='boîte postale')),
                ('telephone', models.CharField(blank=True, default='', max_length=20, verbose_name='téléphone')),
                ('cellulaire', models.CharField(blank=True, default='', max_length=20, verbose_name='cellulaire')),
                ('compte_contribuable', models.CharField(blank=True, default='', max_length=50, verbose_name='compte contribuable')),
                ('registre_commerce', models.CharField(blank=True, default='', max_length=50, verbose_name='registre commerce')),
            ],
            options={
                'ordering': ('raison_sociale',),
            },
        ),
        migrations.CreateModel(
            name='Marchandise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat_marchandise', models.CharField(choices=[('Solide', 'Solide'), ('Liquide', 'Liquide'), ('Gazeux', 'Gazeux'), ('Service', 'Service')], default='Solide', max_length=20, verbose_name='etat physique')),
                ('libelle', models.CharField(max_length=200, unique=True, verbose_name='marchandise/service')),
            ],
        ),
        migrations.CreateModel(
            name='Marque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=100, unique=True, verbose_name='marque')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Modele',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=100, unique=True, verbose_name='marque')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Para',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alerte_email_jour', models.PositiveIntegerField(blank=True, default=5, null=True, verbose_name='alerte email (en jours)')),
                ('dateEnvoiEmail', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date envoi des email')),
                ('envoiEmailEffectue', models.BooleanField(blank=True, default=False, verbose_name='envoi de mail effectué')),
                ('nbreJourMaxDateEcheance', models.SmallIntegerField(blank=True, default=90, null=True, verbose_name='nombre de jours max avant échéance')),
                ('tva', models.FloatField(blank=True, default=0.18, verbose_name='tva')),
                ('numero_devis', models.IntegerField(blank=True, default=0, verbose_name='compteur de devis')),
                ('numero_commande', models.IntegerField(blank=True, default=0, verbose_name='compteur de commande')),
                ('numero_ot', models.IntegerField(blank=True, default=0, verbose_name='compteur de ot')),
                ('numero_facture', models.IntegerField(blank=True, default=0, verbose_name='compteur de facture')),
                ('delai_piece_date_expiration', models.SmallIntegerField(blank=True, default=10, verbose_name='délai de rappel pièce expiration')),
                ('delai_permis_date_echeance', models.SmallIntegerField(blank=True, default=10, verbose_name='délai de rappel permis')),
                ('delai_carte_acces_echeance', models.SmallIntegerField(blank=True, default=10, verbose_name='délai de rappel carte accès')),
                ('delai_entretien_prochain', models.SmallIntegerField(blank=True, default=10, verbose_name='délai de rappel prochain entretien')),
                ('delai_kilometrage_prochain_entretien', models.SmallIntegerField(blank=True, default=10, verbose_name='délai de rappel kilométrage prochain')),
                ('delai_echeance_visite', models.SmallIntegerField(blank=True, default=10, verbose_name='délai de rappel visite technique')),
                ('delai_echeance_assurance', models.SmallIntegerField(blank=True, default=10, verbose_name='délai de rappel assurance')),
                ('delai_echeance_stationnement', models.SmallIntegerField(blank=True, default=10, verbose_name='délai de rappel stationnement')),
                ('delai_echeance_patente', models.SmallIntegerField(blank=True, default=10, verbose_name='délai de rappel patente')),
                ('date_debut', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='date début exercice')),
                ('date_fin', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='date fin exercice')),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='libellé')),
                ('continent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.continent', verbose_name='continent')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Planning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_planning', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='planning date')),
            ],
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raisonSociale', models.CharField(max_length=255, verbose_name='raison sociale')),
                ('sigle', models.CharField(blank=True, default='', max_length=50, verbose_name='sigle')),
                ('telephone', models.CharField(blank=True, default='', max_length=20, verbose_name='téléphone')),
                ('cellulaire', models.CharField(blank=True, default='', max_length=20, verbose_name='cellulaire')),
                ('pagination', models.PositiveIntegerField(blank=True, default=5, verbose_name='nombre de ligne des tableaux')),
                ('photo', models.ImageField(blank=True, default='', null=True, upload_to='images', verbose_name='photo')),
                ('logo', models.ImageField(blank=True, default='', null=True, upload_to='images', verbose_name='logo')),
                ('email', models.EmailField(blank=True, default='', max_length=254, verbose_name='e-mail')),
                ('alerte_email_jour', models.PositiveIntegerField(blank=True, default=5, null=True, verbose_name='alerte email (en jours)')),
                ('dateEnvoiEmail', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date envoi des email')),
                ('envoiEmailEffectue', models.BooleanField(blank=True, default=False, verbose_name='envoi de mail effectué')),
                ('nbreJourMaxDateEcheance', models.SmallIntegerField(blank=True, default=90, null=True, verbose_name='nombre de jours max avant échéance')),
                ('entete_table', models.BooleanField(blank=True, default=False, verbose_name='entêtes des tableaux en couleur des apps')),
                ('tva', models.FloatField(blank=True, default=0.18, verbose_name='tva')),
            ],
        ),
        migrations.CreateModel(
            name='Ville',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='libellé')),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.departement', verbose_name='département')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Vehicule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modele', models.CharField(blank=True, default='', max_length=20, verbose_name='modèle')),
                ('type_vehicule', models.CharField(choices=[('Camion', 'Camion'), ('Utilitaire', 'Utilitaire'), ('Personnel', 'Personnel')], default='Camion', max_length=20, verbose_name='type de véhicules')),
                ('type_carburant', models.CharField(choices=[('Gazoil', 'Gazoil'), ('Essence', 'Essence')], default='Gazoil', max_length=10, verbose_name='type de carburant')),
                ('mode_utilisation', models.CharField(choices=[('Sous-Traitance', 'Sous-Traitance'), ('Patrimoine', 'Patrimoine')], default='Sous-Traitance', max_length=20, verbose_name="Mode d'utilisation")),
                ('assignation', models.CharField(choices=[('Véhicule de service', 'Véhicule de service'), ('Véhicule de transport', 'Véhicule de transport')], default='Véhicule de transport', max_length=50, verbose_name='assignation')),
                ('attelage', models.CharField(choices=[('Non attelé', 'Non attelé'), ('Remorque', 'Remorque'), ('Porte char', 'Porte char'), ('Citerne', 'Citerne')], default='Remorque', max_length=50, verbose_name='attelage')),
                ('immatriculation', models.CharField(max_length=20, verbose_name='immatriculation')),
                ('date_mise_en_circulation', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date de mise en service')),
                ('date_effet', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name="date d'effet assurance")),
                ('date_echeance_visite', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name="date d'échéance visite technique")),
                ('date_echeance_assurance', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name="date d'écheance assurance")),
                ('date_echeance_stationnement', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name="Date d'écheance stationnement")),
                ('date_echeance_patente', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name="date d'écheance patente")),
                ('numero_chassis', models.CharField(blank=True, default='', max_length=20, verbose_name='numéro de chassis')),
                ('poids_ptac', models.FloatField(default=0, verbose_name='poids totale en charge')),
                ('poids_vide', models.FloatField(default=0, verbose_name='poids vide')),
                ('poids_charge_utile', models.FloatField(default=0, verbose_name='charge utile')),
                ('gps', models.BooleanField(default=False, verbose_name='gPS')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='vehicules', verbose_name='photo du véhicule')),
                ('marque', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='parametre.marque', verbose_name='marque')),
            ],
        ),
        migrations.CreateModel(
            name='Trajet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kilometrage', models.FloatField(default=20, verbose_name='kilométrage')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itineraire_fin', to='parametre.commune', verbose_name='destination')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itineraire_debut', to='parametre.commune', verbose_name='source')),
            ],
            options={
                'unique_together': {('source', 'destination', 'kilometrage')},
            },
        ),
        migrations.CreateModel(
            name='Tarification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode_tarification', models.CharField(default='Tonnage', max_length=20, verbose_name='mode de tarification')),
                ('cout', models.ImageField(default=0, upload_to='', verbose_name='coût unitaire')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.client', verbose_name='client')),
            ],
            options={
                'ordering': ('client',),
            },
        ),
        migrations.CreateModel(
            name='Reparation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_reparation', models.CharField(choices=[('Electricité', 'Electricité'), ('Mécanique', 'Mécanique'), ('Tolerie', 'Tolerie'), ('Vidange', 'Vidange'), ('Pneumatique', 'Pneumatique'), ('Climatisation', 'Climatisation'), ('Autre', 'Autre')], default='Vidange', max_length=30, verbose_name='type de réparation')),
                ('date_reparation_debut', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date début réparation')),
                ('date_reparation_fin', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date fin réparation')),
                ('kilometrage', models.FloatField(blank=True, default=0, null=True, verbose_name='kilométrage avant réparation')),
                ('montant', models.FloatField(blank=True, default=0, null=True, verbose_name='montant')),
                ('observation', models.TextField(blank=True, default='', verbose_name='observation')),
                ('fournisseur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.fournisseur', verbose_name='fournisseur')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.vehicule', verbose_name='véhicule')),
            ],
        ),
        migrations.CreateModel(
            name='Reglement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reglement', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date règlement')),
                ('mode_reglement', models.CharField(choices=[('Chèque', 'Chèque'), ('Espèce', 'Espèce'), ('Virement', 'Virement')], default='Chèque', max_length=10, verbose_name='état')),
                ('reference', models.CharField(blank=True, default='', max_length=250, verbose_name='référence')),
                ('montant', models.FloatField(blank=True, default=0, null=True, verbose_name='montant')),
                ('observation', models.TextField(blank=True, default='', verbose_name='observation')),
                ('facturation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.facturation', verbose_name='facture')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='libellé')),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.pays', verbose_name='pays')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Profil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('groupe', models.CharField(choices=[('Direction', 'Direction'), ('Commercial', 'Commercial'), ('Comptabilité', 'Comptabilité'), ('Administrateur', 'Administrateur'), ('Chauffeur', 'Chauffeur')], default='Commercial', max_length=50, verbose_name='groupe')),
                ('login', models.CharField(max_length=50, verbose_name='nom de login')),
                ('mdp', models.CharField(max_length=20, verbose_name='mot de passe')),
                ('civilite', models.CharField(choices=[('M.', 'M.'), ('Mme', 'Mme'), ('Mlle', 'Mlle')], default='M.', max_length=20, verbose_name='civilité')),
                ('nom', models.CharField(max_length=100, verbose_name='nom')),
                ('prenoms', models.CharField(max_length=100, verbose_name='prénoms')),
                ('cellulaire', models.CharField(blank=True, default='', max_length=10, verbose_name='Cellulaire')),
                ('email', models.CharField(blank=True, default='', max_length=200, verbose_name='E-mail')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users', verbose_name='Photo')),
                ('fonction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametre.fonction', verbose_name='fonction')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pompe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_carburant', models.CharField(choices=[('Gazoil', 'Gazoil'), ('Essence', 'Essence')], default='Gazoil', max_length=10, verbose_name='type carburant')),
                ('date_service', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date de mise en service')),
                ('prix', models.FloatField(default=675, verbose_name='prix')),
            ],
            options={
                'unique_together': {('type_carburant', 'date_service')},
            },
        ),
        migrations.CreateModel(
            name='Ordretransport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qui_enleve', models.CharField(blank=True, choices=[('Coco Inter', 'Coco Inter'), ('Sous-Traitance', 'Sous-Traitance')], default='Coco Inter', max_length=30, null=True, verbose_name='transporteur')),
                ('executant', models.CharField(blank=True, default='', max_length=150, verbose_name='exécutant')),
                ('date_ot', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date saisie ot')),
                ('numero_ot', models.CharField(blank=True, default='', max_length=10, verbose_name='numero ot')),
                ('observation', models.CharField(blank=True, default='', max_length=255, verbose_name='observation')),
                ('valide', models.BooleanField(default=False, verbose_name='validé')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.commande', verbose_name='commande')),
            ],
        ),
        migrations.CreateModel(
            name='Entretien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_entretien', models.CharField(choices=[('Vidange', 'Vidange'), ('Pneumatique', 'Pneumatique'), ('Climatisation', 'Climatisation'), ('Autre', 'Autre')], default='Vidange', max_length=30, verbose_name="type d'entretien")),
                ('date_entretien_debut', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date début entretien')),
                ('date_entretien_fin', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date fin entretien')),
                ('nature_prochain_entretien', models.CharField(choices=[('Prochain entretien en Date', 'Prochain entretien en date'), ('Prochain entretien en Km', 'Prochain entretien en Km')], default='Prochain entretien en Date', max_length=100, verbose_name='Nature prochain entretien')),
                ('date_entretien_prochain', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date prochain entretien')),
                ('kilometrage', models.FloatField(blank=True, default=0, null=True, verbose_name='kilométrage avant entretien')),
                ('kilometrage_prochain_entretien', models.FloatField(blank=True, default=0, null=True, verbose_name='kilométrage prochain entretien')),
                ('montant', models.FloatField(blank=True, default=0, null=True, verbose_name='montant')),
                ('observation', models.TextField(blank=True, default='', null=True, verbose_name='observation')),
                ('fournisseur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.fournisseur', verbose_name='fournisseur')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.vehicule', verbose_name='véhicule')),
            ],
        ),
        migrations.CreateModel(
            name='Enlevement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rubrique', models.TextField(blank=True, default='', verbose_name='libellé complément marchandises ou services')),
                ('date_enlevement', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True, verbose_name='date enlèvement')),
                ('lieu_chargement', models.CharField(blank=True, default='', max_length=255, verbose_name='lieu de chargement')),
                ('contact_chargement', models.CharField(blank=True, default='', max_length=255, verbose_name='contact chargement')),
                ('telephone_chargement', models.CharField(blank=True, default='', max_length=20, verbose_name='téléphone chargement')),
                ('date_dechargement', models.DateField(blank=True, default=datetime.date.today, verbose_name='date déchargement')),
                ('lieu_dechargement', models.CharField(blank=True, default='', max_length=255, verbose_name='lieu du déchargement')),
                ('contact_dechargement', models.CharField(blank=True, default='', max_length=255, verbose_name='contact déchargement')),
                ('telephone_dechargement', models.CharField(blank=True, default='', max_length=20, verbose_name='Téléphone déchargement')),
                ('poids_vide', models.FloatField(default=0, verbose_name='poids à vide (Tonne)')),
                ('poids_charge', models.FloatField(default=0, verbose_name='poids brut (Tonne)')),
                ('poids_net', models.FloatField(blank=True, default=0, null=True, verbose_name='poids net-Tonne')),
                ('quantite', models.FloatField(blank=True, default=0, verbose_name='quantité (Poids net-Tonne / Kilometrage-km / Autres')),
                ('mode_tarification', models.CharField(choices=[('Tonnage', 'Tonnage'), ('kilométrage', 'kilométrage'), ('Forfait', 'Forfait'), ('Autre', 'Autre')], default='Tonnage', max_length=30, verbose_name='mode tarification')),
                ('prix_unitaire', models.FloatField(default=0, verbose_name='prix unitaire')),
                ('numero_ticket', models.CharField(blank=True, default='', max_length=20, verbose_name='numéro de ticket')),
                ('etat_enlevement', models.CharField(blank=True, choices=[('En cours', 'En cours'), ('Fin enlèvement', 'Fin enlèvement'), ('En route déchargement', 'En route déchargement'), ('Déchargement en cours', 'Déchargement en cours'), ('Fin déchargement', 'Fin déchargement')], default='En cours', max_length=30, null=True, verbose_name='état enlèvement')),
                ('observation', models.TextField(blank=True, default='', null=True, verbose_name='observation')),
                ('chauffeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.chauffeur', verbose_name='chauffeur')),
                ('marchandise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.marchandise', verbose_name='marchandise')),
                ('ordretransport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.ordretransport', verbose_name='client')),
                ('trajet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.trajet', verbose_name='itinéraire')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.vehicule', verbose_name='vehicule')),
            ],
        ),
        migrations.CreateModel(
            name='Devis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_devis', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='date devis')),
                ('client_pour_compte', models.CharField(blank=True, default='', max_length=100, verbose_name='pour le compte de')),
                ('lieu_chargement', models.CharField(blank=True, default='', max_length=150, verbose_name='lieu chargement')),
                ('lieu_dechargement', models.CharField(blank=True, default='', max_length=150, verbose_name='lieu déchargement')),
                ('navire', models.CharField(blank=True, default='', max_length=150, verbose_name='navire')),
                ('mode_tarification', models.CharField(choices=[('Tonnage', 'Tonnage'), ('Kilométrage', 'Kilométrage'), ('Trajet', 'Trajet'), ('Autre', 'Autre')], default='Tonnage', max_length=30, verbose_name='mode tarification')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('valide', models.BooleanField(default=False, verbose_name='validé')),
                ('numero_devis', models.CharField(blank=True, default='', max_length=10, verbose_name='numero devis')),
                ('tva', models.FloatField(blank=True, default=0, verbose_name='tva')),
                ('condition_vente', models.TextField(blank=True, default='', null=True, verbose_name='condition de vente')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.client', verbose_name='client')),
            ],
            options={
                'ordering': ('-date_devis',),
            },
        ),
        migrations.CreateModel(
            name='Depense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_depense', models.CharField(choices=[('Chargement', 'Chargement'), ('Déchargement', 'Déchargement'), ('Annexe', 'Annexe'), ('Pourboire', 'Pourboire')], default='Chargement', max_length=30, verbose_name='type de dépense')),
                ('date_depense', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date dépense')),
                ('montant', models.FloatField(default=0, verbose_name='montant')),
                ('observation', models.TextField(blank=True, default='', verbose_name='observation')),
                ('ordretransport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametre.ordretransport', verbose_name='ot (pas de OT pour dépenses ordinaires)')),
            ],
            options={
                'ordering': ('-date_depense',),
            },
        ),
        migrations.AddField(
            model_name='departement',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.region', verbose_name='région'),
        ),
        migrations.AddField(
            model_name='commune',
            name='ville',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.ville', verbose_name='ville'),
        ),
        migrations.AddField(
            model_name='chauffeur',
            name='vehicule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.vehicule', verbose_name='affectation véhicule'),
        ),
        migrations.CreateModel(
            name='Carburant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_bon', models.CharField(blank=True, default='', max_length=20, verbose_name='numéro bon')),
                ('navire', models.CharField(blank=True, default='', max_length=100, verbose_name='navire')),
                ('type_carburant', models.CharField(choices=[('Gazoil', 'Gazoil'), ('Essence', 'Essence')], default='Gazoil', max_length=10, verbose_name='type de carburant')),
                ('imputation', models.CharField(choices=[('Préfinancement', 'Préfinancement'), ('Coco Inter', 'Coco Inter')], default='Préfinancement', max_length=20, verbose_name='imputation')),
                ('client', models.CharField(blank=True, default='', max_length=100, verbose_name='client')),
                ('date_prise', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date de prise')),
                ('quantite', models.SmallIntegerField(default=0, verbose_name='quantité')),
                ('montant', models.IntegerField(default=0, verbose_name='montant')),
                ('kilometrage', models.IntegerField(default=0, verbose_name='kilométrage avant prise')),
                ('station', models.CharField(blank=True, default='', max_length=100, verbose_name='station')),
                ('prix_pompe', models.IntegerField(blank=True, default=610, verbose_name='prix à la pompe')),
                ('chauffeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.chauffeur', verbose_name='chauffeur')),
                ('ordretransport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametre.ordretransport', verbose_name='ot (pas de OT pour les prises ordinaires)')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.vehicule', verbose_name='vehicule')),
            ],
            options={
                'ordering': ('-date_prise',),
            },
        ),
        migrations.CreateModel(
            name='Detailsot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rubrique', models.TextField(blank=True, default='', verbose_name='libellé complément marchdes ou services ')),
                ('lieu_chargement', models.CharField(blank=True, default='', max_length=100, verbose_name='lieu chargement')),
                ('contact_chargement', models.CharField(blank=True, default='', max_length=100, verbose_name='contact')),
                ('adresse_chargement', models.CharField(blank=True, default='', max_length=100, verbose_name='adresse')),
                ('telephone_chargement', models.CharField(blank=True, default='', max_length=15, verbose_name='téléphone')),
                ('lieu_dechargement', models.CharField(blank=True, default='', max_length=200, verbose_name='lieu déchargement')),
                ('contact_dechargement', models.CharField(blank=True, default='', max_length=100, verbose_name='contact')),
                ('adresse_dechargement', models.CharField(blank=True, default='', max_length=100, verbose_name='adresse')),
                ('telephone_dechargement', models.CharField(blank=True, default='', max_length=15, verbose_name='téléphone')),
                ('quantite', models.FloatField(blank=True, null=True, verbose_name='quantité / km')),
                ('prix_unitaire', models.FloatField(blank=True, null=True, verbose_name='prix unitaire')),
                ('marchandise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.marchandise', verbose_name='marchandise')),
                ('ot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.ordretransport', verbose_name='ot')),
                ('trajet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.trajet', verbose_name='itinéraire')),
            ],
            options={
                'unique_together': {('ot', 'marchandise', 'trajet')},
            },
        ),
        migrations.CreateModel(
            name='Detailsdevis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rubrique', models.TextField(blank=True, default='', verbose_name='libellé complément marchandises ou services')),
                ('quantite', models.FloatField(blank=True, null=True, verbose_name='quantité / km')),
                ('prix_unitaire', models.FloatField(blank=True, null=True, verbose_name='prix unitaire')),
                ('devis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.devis', verbose_name='devis')),
                ('marchandise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.marchandise', verbose_name='marchandise')),
                ('trajet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.trajet', verbose_name='itinéraire')),
            ],
            options={
                'unique_together': {('devis', 'marchandise', 'trajet')},
            },
        ),
        migrations.CreateModel(
            name='Detailscommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rubrique', models.TextField(blank=True, default='', verbose_name='libellé complément marchdes ou services ')),
                ('lieu_chargement', models.CharField(blank=True, default='', max_length=100, verbose_name='lieu chargement')),
                ('contact_chargement', models.CharField(blank=True, default='', max_length=100, verbose_name='contact')),
                ('adresse_chargement', models.CharField(blank=True, default='', max_length=100, verbose_name='adresse')),
                ('telephone_chargement', models.CharField(blank=True, default='', max_length=15, verbose_name='téléphone')),
                ('lieu_dechargement', models.CharField(blank=True, default='', max_length=200, verbose_name='lieu déchargement')),
                ('contact_dechargement', models.CharField(blank=True, default='', max_length=100, verbose_name='contact')),
                ('adresse_dechargement', models.CharField(blank=True, default='', max_length=100, verbose_name='adresse')),
                ('telephone_dechargement', models.CharField(blank=True, default='', max_length=15, verbose_name='téléphone')),
                ('quantite', models.FloatField(blank=True, null=True, verbose_name='quantité / km')),
                ('prix_unitaire', models.FloatField(blank=True, null=True, verbose_name='prix unitaire')),
                ('observation', models.TextField(blank=True, default='', verbose_name='observation')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.commande', verbose_name='client')),
                ('marchandise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.marchandise', verbose_name='marchandise')),
                ('trajet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.trajet', verbose_name='itinéraire')),
            ],
            options={
                'unique_together': {('commande', 'marchandise', 'trajet')},
            },
        ),
    ]
